
// Wizard-generated connection point proxy class
// WARNING: This file may be regenerated by the wizard


#pragma once

template<class T>
class CProxyIBusy :
	public IConnectionPointImpl<T, &IID_IBusy>
{
public:

	HRESULT Fire_Busy(LONG nTimes, VARIANT_BOOL * pbResult)
	{
		HRESULT hr = S_OK;
		T * pThis = static_cast<T *>(this);
		int cConnections = m_vec.GetSize();
		*pbResult = VARIANT_FALSE;

		for (int iConnection = 0; iConnection < cConnections; iConnection++)
		{
			pThis->Lock();
			CComPtr<IUnknown> punkConnection = m_vec.GetAt(iConnection);
			pThis->Unlock();

			IDispatch * pConnection = static_cast<IDispatch *>(punkConnection.p);

			if (pConnection)
			{
				CComVariant avarParams[1];
				avarParams[0] = nTimes;
				avarParams[0].vt = VT_I4;
				CComVariant varResult;
				if(pbResult)
				{
					varResult.byref = pbResult;
					varResult.vt = VT_BOOL|VT_BYREF;
				}

				DISPPARAMS params = { avarParams, NULL, 1, 0 };
				hr = pConnection->Invoke(1, IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_METHOD, &params, &varResult, NULL, NULL);
				
				if ( SUCCEEDED(hr) && (*pbResult == VARIANT_TRUE) )
				{
					break;
				}
			}
		}
		return hr;
	}
};

